
# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

[ ! ${FRESH_PYTHON:-} ] && bpwatch start pip_install
[ ${FRESH_PYTHON:-} ] && bpwatch start pip_install_first

if test -d $BUILD_DIR/vendor; then
  /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external --no-index --find-links=file://$BUILD_DIR/vendor | cleanup | indent

  cp requirements.txt .heroku/python/requirements-declared.txt
  /app/.heroku/python/bin/pip freeze --find-links=file://$BUILD_DIR/vendor --disable-pip-version-check > .heroku/python/requirements-installed.txt
else
  /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external | cleanup | indent

  cp requirements.txt .heroku/python/requirements-declared.txt
  /app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt
fi

[ ! ${FRESH_PYTHON:-} ] && bpwatch stop pip_install
[ ${FRESH_PYTHON:-} ] && bpwatch stop pip_install_first

#puts-step "Starting Proxy"

#python --version
#easy_install pip
#python -m pip install --upgrade pip
#pip install virtualenv
#virtualenv env

#/app/env/bin/pip install requests
pip install https://pypi.python.org/packages/py2/a/appdynamics/appdynamics-4.2.1.1-py2-none-any.whl

#/app/env/bin/pyagent run -c /app/appdynamics.cfg -- /app/env/bin/gunicorn -w 8 -b '0.0.0.0:9000' demo.app:app >/dev/null &

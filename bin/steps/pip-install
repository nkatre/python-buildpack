# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

puts-step "Installing appdynamics dependencies"

pip install appdynamics

[ ! ${FRESH_PYTHON:-} ] && bpwatch start pip_install
[ ${FRESH_PYTHON:-} ] && bpwatch start pip_install_first

if test -d $BUILD_DIR/vendor; then
  /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external --no-index --find-links=file://$BUILD_DIR/vendor | cleanup | indent

  cp requirements.txt .heroku/python/requirements-declared.txt
  /app/.heroku/python/bin/pip freeze --find-links=file://$BUILD_DIR/vendor --disable-pip-version-check > .heroku/python/requirements-installed.txt
else
  /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external | cleanup | indent

  cp requirements.txt .heroku/python/requirements-declared.txt
  /app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt
fi

[ ! ${FRESH_PYTHON:-} ] && bpwatch stop pip_install
[ ${FRESH_PYTHON:-} ] && bpwatch stop pip_install_first

puts-step "Starting Proxy"

#puts-step $BUILD_DIR
#puts-step $APPD_DIR

pyagent proxy start -c $BUILD_DIR/appdynamics.cfg -d &

echo

# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

#puts-step "Installing appdynamics dependencies"

#pip install appdynamics

[ ! ${FRESH_PYTHON:-} ] && bpwatch start pip_install
[ ${FRESH_PYTHON:-} ] && bpwatch start pip_install_first

if test -d $BUILD_DIR/vendor; then
  /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external --no-index --find-links=file://$BUILD_DIR/vendor | cleanup | indent

  cp requirements.txt .heroku/python/requirements-declared.txt
  /app/.heroku/python/bin/pip freeze --find-links=file://$BUILD_DIR/vendor --disable-pip-version-check > .heroku/python/requirements-installed.txt
else
  /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external | cleanup | indent

  cp requirements.txt .heroku/python/requirements-declared.txt
  /app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt
fi

[ ! ${FRESH_PYTHON:-} ] && bpwatch stop pip_install
[ ${FRESH_PYTHON:-} ] && bpwatch stop pip_install_first

#puts-step "Starting Proxy"
echo ENV
echo $VCAP_SERVICES
echo ${VCAP_SERVICES}


#puts-step $BUILD_DIR
#puts-step $APPD_DIR

#pyagent proxy start -c $BUILD_DIR/appdynamics.cfg -d &
#pip install appdynamics
#puts-step "starting proxy"
#pyagent proxy start
sudo easy_install pip
sudo pip install virtualenv
virtualenv env
env/bin/pip install -r requirements.txt
env/bin/pyagent run -c appdynamics.cfg - env/bin/gunicorn -w 4 -b 0.0.0.0:9000 demo.app:app


#pyagent run -c $BUILD_DIR/appdynamics.cfg -- gunicorn -w 8 -b '127.0.0.1:9000' demo.app:app


echo
